name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

concurrency:
  group: '${{ github.workflow }}-${{ github.ref_name }}'
  cancel-in-progress: true

jobs:

  cache_lfs:
    runs-on: ubuntu-latest
    name: Update LFS data cache
    outputs:
      lfs_sha: ${{ steps.lfs_sha_recover.outputs.lfs_sha }}
    steps:

    - name: Checkout
      uses: actions/checkout@v4
      with:
        path: 'source'
        fetch-depth: 1
        lfs: false

    - name: Cache LFS Data
      id: lfs_sha_recover
      uses: f3d-app/lfs-data-cache-action@v1
      with:
        cache_postfix: cache-0

  windows:
    needs: cache_lfs
    strategy:
      fail-fast: false
      matrix:
        raytracing_label: [raytracing, no-raytracing]

    runs-on: windows-2022

    env:
      CMAKE_POLICY_VERSION_MINIMUM: 3.5

    steps:

    - name: Checkout
      uses: actions/checkout@v4
      with:
        path: 'source'
        submodules: true
        lfs: false

    - name: Build and package F3D
      uses: ./source/.github/actions/f3d-superbuild/
      with:
        f3d_version: origin/master
        raytracing_label: ${{matrix.raytracing_label}}
        lfs_sha: ${{ needs.cache_lfs.outputs.lfs_sha}}

  linux:
    needs: cache_lfs
    strategy:
      fail-fast: false
      matrix:
        raytracing_label: [raytracing, no-raytracing]

    runs-on: ubuntu-latest
    container: ghcr.io/f3d-app/f3d-superbuild-ci

    env:
      DISPLAY: :0
      CMAKE_POLICY_VERSION_MINIMUM: 3.5

    steps:

    - name: Checkout
      uses: actions/checkout@v4
      with:
        path: 'source'
        submodules: true
        lfs: false

    - name: Build and package F3D
      uses: ./source/.github/actions/f3d-superbuild/
      with:
        f3d_version: origin/master
        raytracing_label: ${{matrix.raytracing_label}}
        lfs_sha: ${{ needs.cache_lfs.outputs.lfs_sha}}

  macos:
    needs: cache_lfs
    strategy:
      fail-fast: false
      matrix:
        cpu: [x86_64, arm64]
        raytracing_label: [raytracing, no-raytracing]
        include:
          - cpu: x86_64
            macos: macos-13
          - cpu: arm64
            macos: macos-14

    runs-on: ${{matrix.macos}}

    env:
      CMAKE_POLICY_VERSION_MINIMUM: 3.5

    steps:

    - name: Checkout
      uses: actions/checkout@v4
      with:
        path: 'source'
        submodules: true
        lfs: false

    - name: Build and package F3D
      uses: ./source/.github/actions/f3d-superbuild/
      with:
        f3d_version: origin/master
        raytracing_label: ${{matrix.raytracing_label}}
        cpu: ${{matrix.cpu}}
        lfs_sha: ${{ needs.cache_lfs.outputs.lfs_sha}}

  python_wheels:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-2022, macos-latest]

    runs-on: ${{matrix.os}}

    env:
      DISPLAY: :0

    steps:

    - name: Checkout
      uses: actions/checkout@v4
      with:
        path: 'source'
        submodules: true

    - name: Build python wheels
      uses: ./source/.github/actions/wheels/

  wasm_npm:
    strategy:
      fail-fast: false

    runs-on: ubuntu-22.04

    steps:
    - name: Install recent node
      uses: actions/setup-node@v5
      with:
        node-version: 22

    - name: Create package
      run: npm pack f3d-app/f3d

    - name: Upload npm log on failure
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        path: /home/runner/.npm/_logs/*.log
        name: f3d-npm-log

    - name: Rename package
      run: for file in f3d-*.tgz ; do mv $file ${file//f3d-/f3d-web-} ; done

    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: f3d-web
        path: f3d-web-*.tgz
