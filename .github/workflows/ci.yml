name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  workflow_dispatch:

jobs:
  build_and_package:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    runs-on: ${{matrix.os}}
    container: ${{ matrix.os == 'ubuntu-latest' && 'ghcr.io/f3d-app/f3d-ci' || null }}

    env:
      DISPLAY: :0

    steps:

    - name: Intall ninja Windows
      if: matrix.os == 'windows-latest'
      uses: seanmiddleditch/gha-setup-ninja@v3

    - name: setup msvc Windows
      if: matrix.os == 'windows-latest'
      uses: TheMrMilchmann/setup-msvc-dev@v2
      with:
        arch: x64

    - name: Checkout
      uses: actions/checkout@v3
      with:
        path: 'source'
        submodules: 'true'

    - name: Setup NSIS Windows
      if: matrix.os == 'windows-latest'
      working-directory: ${{github.workspace}}
      run: cp source\.github\nsis\FileAssociation.nsh "${env:ProgramFiles(x86)}/NSIS/Include"

    - name: Setup Directories
      working-directory: ${{github.workspace}}
      run: mkdir build

    - name: Configure
      working-directory: ${{github.workspace}}/build
      run: >
        cmake ../source
        -DCMAKE_BUILD_TYPE=Release
        -Df3d_SOURCE_SELECTION="1.3.1"
        ${{ matrix.os == 'windows-latest' && '-G Ninja' || null }}
        ${{ matrix.os == 'macos-latest' && '-DCMAKE_OSX_DEPLOYMENT_TARGET=10.15' || null }}

    - name: Build
      working-directory: ${{github.workspace}}/build
      run: cmake --build . --parallel 2 --config Release

    - name: Package
      working-directory: ${{github.workspace}}/build
      run: ctest -R cpack -VV

    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        path: ./build/F3D-*
        name: F3D-${{matrix.os}}
