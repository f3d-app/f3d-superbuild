name: Python wheels

on:
  workflow_dispatch:
    inputs:
      f3d_version:
        description: 'F3D version to build'
        required: true
        default: 'master'
      enable_alembic:
        type: boolean
        description: 'Enable Alembic plugin'
        default: true
      enable_assimp:
        type: boolean
        description: 'Enable Assimp plugin'
        default: true
      enable_draco:
        type: boolean
        description: 'Enable Draco plugin'
        default: true
      enable_occt:
        type: boolean
        description: 'Enable OpenCASCADE plugin'
        default: true

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-2019, macOS-11]

    # fetch-depth: 0 is required to get the tags used to determine f3d version
    steps:
      - name: Checkout f3d-superbuild
        uses: actions/checkout@v3
        with:
          submodules: true
          path: 'f3d-superbuild'

      - name: Checkout f3d
        uses: actions/checkout@v3
        with:
          #repository: 'f3d-app/f3d'
          repository: 'Meakk/f3d'
          #ref: ${{github.event.inputs.f3d_version}}
          ref: 'deps'
          fetch-depth: 0
          path: 'f3d'

      - name: Recover VTK version to build
        working-directory: ${{github.workspace}}
        shell: bash
        run: |
          echo VTK_COMMIT_SHA=`cat ./f3d/.github/actions/vtk_commit_sha` >> $GITHUB_ENV

      - name: Setup Ninja Windows
        if: runner.os == 'Windows'
        shell: bash
        run: |
          choco install ninja
          echo CMAKE_GENERATOR=Ninja >> $GITHUB_ENV

      - name: Setup MSVC Windows
        if: runner.os == 'Windows'
        uses: TheMrMilchmann/setup-msvc-dev@v2
        with:
          arch: x64

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.13.1
        with:
          package-dir: ${{github.workspace}}/f3d
          output-dir: ${{github.workspace}}/wheelhouse
          config-file: ${{github.workspace}}/f3d/pyproject.toml
        env:
          CIBW_SKIP: 'pp-* *-musl*'
          CIBW_ARCHS: native
          CIBW_ENVIRONMENT: "\
            CMAKE_PREFIX_PATH=../f3d-superbuild-build/install \
            SKBUILD_CMAKE_ARGS=\"\
            -DF3D_DEPENDENCIES_DIR=${{github.workspace}}/f3d-superbuild-build/install/bin;\
            -DF3D_PLUGIN_BUILD_ALEMBIC=${{ github.event.inputs.enable_alembic == 'true' && 'ON' || 'OFF' }};\
            -DF3D_PLUGIN_BUILD_ASSIMP=${{ github.event.inputs.enable_assimp == 'true' && 'ON' || 'OFF' }};\
            -DF3D_PLUGIN_BUILD_DRACO=${{ github.event.inputs.enable_draco == 'true' && 'ON' || 'OFF' }};\
            -DF3D_PLUGIN_BUILD_OCCT=${{ github.event.inputs.enable_occt == 'true' && 'ON' || 'OFF' }};\
            -DF3D_PLUGIN_OCCT_COLORING_SUPPORT=ON;\
            -DF3D_MODULE_EXTERNAL_RENDERING=ON\""
          CIBW_ENVIRONMENT_PASS_LINUX: >
            CMAKE_PREFIX_PATH
            SKBUILD_CMAKE_ARGS
          CIBW_REPAIR_WHEEL_COMMAND: ''
          CIBW_BEFORE_ALL: >
            cmake -S f3d-superbuild -B f3d-superbuild-build
            -DBUILD_SHARED_LIBS=OFF
            -DCMAKE_BUILD_TYPE=Release
            -DENABLE_f3d=OFF
            -DENABLE_alembic=${{ github.event.inputs.enable_alembic == 'true' && 'ON' || 'OFF' }}
            -DENABLE_assimp=${{ github.event.inputs.enable_assimp == 'true' && 'ON' || 'OFF' }}
            -DENABLE_draco=${{ github.event.inputs.enable_draco == 'true' && 'ON' || 'OFF' }}
            -DENABLE_occt=${{ github.event.inputs.enable_occt == 'true' && 'ON' || 'OFF' }}
            -DENABLE_openexr=${{ github.event.inputs.enable_exr == 'true' && 'ON' || 'OFF' }}
            -DENABLE_ospray=OFF
            -DENABLE_pybind11=ON
            -DENABLE_tbb=OFF
            -DENABLE_vtk=ON
            -DOCCT_ENABLE_COLORING=ON
            -Dvtk_SOURCE_SELECTION=git
            -Dvtk_GIT_TAG=${{ env.VTK_COMMIT_SHA }} &&
            cmake --build f3d-superbuild-build

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ runner.os }}-wheels
          path: ./wheelhouse/*.whl
