name: Release

on:
  workflow_dispatch:
    inputs:
      f3d_version:
        description: 'F3D version to build'
        required: true
        default: 'v2.0.0'
      sb_branch:
        description: 'Superbuild branch/tag to use'
        required: true
        default: 'main'
      publish_assets:
        description: 'Publish assets to a prerelease'
        required: true
        default: 'false'

jobs:

  cache_lfs:
    runs-on: ubuntu-latest
    name: Update LFS data cache
    outputs:
      lfs_sha: ${{ steps.lfs_sha_recover.outputs.lfs_sha }}
    steps:

    - name: Checkout
      uses: actions/checkout@v4
      with:
        path: 'source'
        fetch-depth: 1
        lfs: false

    - name: Cache LFS Data
      id: lfs_sha_recover
      uses: f3d-app/lfs-data-cache-action@v1
      with:
        cache_postfix: cache-0

  windows:
    needs: cache_lfs
    strategy:
      fail-fast: false
      matrix:
        raytracing_label: [raytracing, no-raytracing]

    runs-on: windows-2022

    env:
      CMAKE_POLICY_VERSION_MINIMUM: 3.5

    steps:

    - name: Checkout
      uses: actions/checkout@v4
      with:
        path: 'source'
        submodules: true
        lfs: false
        ref: ${{ github.event.inputs.sb_branch}}

    - name: Build and package F3D
      uses: ./source/.github/actions/f3d-superbuild/
      with:
        f3d_version: ${{github.event.inputs.f3d_version}}
        raytracing_label: ${{matrix.raytracing_label}}
        lfs_sha: ${{ needs.cache_lfs.outputs.lfs_sha}}

    - name: Publish assets
      if: ${{ github.event.inputs.publish_assets == 'true' }}
      uses: ncipollo/release-action@v1
      with:
        owner: f3d-app
        repo: f3d
        token: ${{ secrets.SECRET_TOKEN }}
        prerelease: true
        allowUpdates: true
        updateOnlyUnreleased: true
        replacesArtifacts: true
        omitBodyDuringUpdate: true
        omitNameDuringUpdate: true
        tag: ${{github.event.inputs.f3d_version}}
        artifacts: './build/F3D-*'

  linux:
    needs: cache_lfs
    strategy:
      fail-fast: false
      matrix:
        raytracing_label: [raytracing, no-raytracing]

    runs-on: ubuntu-latest
    container: ghcr.io/f3d-app/f3d-superbuild-ci

    env:
      DISPLAY: :0
      CMAKE_POLICY_VERSION_MINIMUM: 3.5

    steps:

    - name: Checkout
      uses: actions/checkout@v4
      with:
        path: 'source'
        submodules: true
        lfs: false
        ref: ${{ github.event.inputs.sb_branch}}

    - name: Build and package F3D
      uses: ./source/.github/actions/f3d-superbuild/
      with:
        f3d_version: ${{github.event.inputs.f3d_version}}
        raytracing_label: ${{matrix.raytracing_label}}
        lfs_sha: ${{ needs.cache_lfs.outputs.lfs_sha}}

    - name: Publish assets
      if: ${{ github.event.inputs.publish_assets == 'true' }}
      uses: ncipollo/release-action@v1
      with:
        owner: f3d-app
        repo: f3d
        token: ${{ secrets.SECRET_TOKEN }}
        prerelease: true
        allowUpdates: true
        updateOnlyUnreleased: true
        replacesArtifacts: true
        omitBodyDuringUpdate: true
        omitNameDuringUpdate: true
        tag: ${{github.event.inputs.f3d_version}}
        artifacts: './build/F3D-*'

  macos:
    needs: cache_lfs
    strategy:
      fail-fast: false
      matrix:
        cpu: [x86_64, arm64]
        raytracing_label: [raytracing, no-raytracing]
        include:
          - cpu: x86_64
            macos: macos-13
          - cpu: arm64
            macos: macos-14

    runs-on: ${{matrix.macos}}

    env:
      CMAKE_POLICY_VERSION_MINIMUM: 3.5

    steps:

    - name: Checkout
      uses: actions/checkout@v4
      with:
        path: 'source'
        submodules: true
        lfs: false
        ref: ${{ github.event.inputs.sb_branch}}

    - name: Build and package F3D
      uses: ./source/.github/actions/f3d-superbuild/
      with:
        f3d_version: ${{github.event.inputs.f3d_version}}
        raytracing_label: ${{matrix.raytracing_label}}
        cpu: ${{matrix.cpu}}
        lfs_sha: ${{ needs.cache_lfs.outputs.lfs_sha}}

    - name: Publish assets
      if: ${{ github.event.inputs.publish_assets == 'true' }}
      uses: ncipollo/release-action@v1
      with:
        owner: f3d-app
        repo: f3d
        token: ${{ secrets.SECRET_TOKEN }}
        prerelease: true
        allowUpdates: true
        updateOnlyUnreleased: true
        replacesArtifacts: true
        omitBodyDuringUpdate: true
        omitNameDuringUpdate: true
        tag: ${{github.event.inputs.f3d_version}}
        artifacts: './build/F3D-*'

  python_wheels:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-2022, macos-latest]

    runs-on: ${{matrix.os}}

    env:
      DISPLAY: :0

    steps:

    - name: Checkout
      uses: actions/checkout@v4
      with:
        path: 'source'
        submodules: true
        lfs: true
        ref: ${{ github.event.inputs.sb_branch}}

    - name: Build and package F3D python wheels
      uses: ./source/.github/actions/wheels/
      with:
        f3d_version: ${{github.event.inputs.f3d_version}}
        use_cache: false

    - name: Publish assets
      if: ${{ github.event.inputs.publish_assets == 'true' }}
      uses: ncipollo/release-action@v1
      with:
        owner: f3d-app
        repo: f3d
        token: ${{ secrets.SECRET_TOKEN }}
        prerelease: true
        allowUpdates: true
        updateOnlyUnreleased: true
        replacesArtifacts: true
        omitBodyDuringUpdate: true
        omitNameDuringUpdate: true
        tag: ${{github.event.inputs.f3d_version}}
        artifacts: './wheelhouse/f3d-*.whl'

  pypi-publish:
    needs: python_wheels
    strategy:
      fail-fast: false

    runs-on: ubuntu-latest

    environment:
      name: pypi
      url: https://pypi.org/p/f3d

    permissions:
      id-token: write

    steps:

    - uses: actions/download-artifact@v4
      with:
        pattern: wheels-*
        merge-multiple: true
        path: dist

    - name: Publish package distributions to PyPi
      uses: pypa/gh-action-pypi-publish@release/v1

  wasm-package:
    strategy:
      fail-fast: false

    runs-on: ubuntu-latest

    steps:
    - name: Install recent node
      uses: actions/setup-node@v5
      with:
        node-version: 22

    - name: Create package
      run: npm pack f3d-app/f3d#${{github.event.inputs.f3d_version}}

    - name: Rename package
      run: for file in f3d-*.tgz ; do mv $file ${file//f3d-/f3d-web-} ; done

    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: f3d-web
        path: f3d-web-*.tgz

    - name: Publish npm package
      uses: ncipollo/release-action@v1
      with:
        owner: f3d-app
        repo: f3d
        token: ${{ secrets.SECRET_TOKEN }}
        prerelease: true
        allowUpdates: true
        updateOnlyUnreleased: true
        replacesArtifacts: true
        omitBodyDuringUpdate: true
        omitNameDuringUpdate: true
        tag: ${{github.event.inputs.f3d_version}}
        artifacts: './f3d-web-*.tgz'

  npm-publish:
    needs: wasm-package
    strategy:
      fail-fast: false

    runs-on: ubuntu-latest

    permissions:
      id-token: write

    env:
      NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    steps:
    - name: Download package
      uses: actions/download-artifact@v4
      with:
        pattern: f3d-web-*

    - name: Publish package
      run: >
        npm publish
        --access public
        ${{ contains(github.event.inputs.f3d_version, 'RC') && '--tag next' || null }} 
        f3d-web-*.tgz
